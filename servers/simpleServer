#!/usr/bin/env python

from util import printf,fprintf
import servers
import string
import json
import util
import sys
import os


def usage(prog):
    printf("Usage is %s <imageId> <flavorId> <serverName> [skelPath]\n",prog)
    printf("\n")
    printf("Build a cloud server based on credentials supplited in the\n")
    printf("auth_headers.db. Use the getauth script to populate the\n")
    printf(".db file\n")

def buildServer(s,*args,**kw):
    if kw.has_key("skel"):
        kw["personality"] = servers.getSkelPersonality(kw.pop("skel"))
    printf("Using config:\n%s\n",json.dumps(kw,indent=4))
    resp = s.createServer(**kw)
    return resp

def showResp(jsonStr):
    ips = string.join(resp["server"]["addresses"]["public"],",")
    id = resp["server"]["id"]
    passwd = resp["server"]["adminPass"]
    printf("id = %s\nips = %s\npasswd = \"%s\"\n",id,ips,passwd)

if __name__ == "__main__":
    prog = os.path.basename(sys.argv[0])
    if len(sys.argv)<5:
        usage(prog)
        sys.exit()
    s = servers.Servers()
    kw = {}
    kw["imageId"] = int(sys.argv[1])
    kw["flavorId"] = int(sys.argv[2])
    kw["name"] = sys.argv[3]
    kw["skel"] = sys.argv[4]
    resp = buildServer(s,**kw)
    showResp(resp)    
